"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/calculator/page",{

/***/ "(app-pages-browser)/./src/lib/calculator.ts":
/*!*******************************!*\
  !*** ./src/lib/calculator.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateChildRaisingCost: () => (/* binding */ calculateChildRaisingCost),\n/* harmony export */   getCostPercentages: () => (/* binding */ getCostPercentages),\n/* harmony export */   getNationalAverageCost: () => (/* binding */ getNationalAverageCost)\n/* harmony export */ });\n/**\n * 城市等级费用系数\n */ const CITY_TIER_MULTIPLIERS = {\n    tier1: 1.5,\n    tier2: 1.2,\n    tier3: 1.0\n};\n/**\n * 教育类型费用系数\n */ const EDUCATION_MULTIPLIERS = {\n    public: 1.0,\n    private: 2.5,\n    international: 4.0\n};\n/**\n * 医疗水平费用系数\n */ const HEALTHCARE_MULTIPLIERS = {\n    basic: 1.0,\n    premium: 2.0\n};\n/**\n * 不同年龄段的基础年度费用（三线城市，基础医疗）\n */ const BASE_ANNUAL_COSTS_BY_AGE = {\n    '0-1': {\n        basicLiving: 18000,\n        education: 0,\n        healthcare: 4000,\n        extracurricular: 0,\n        others: 3000\n    },\n    '2-3': {\n        basicLiving: 16000,\n        education: 2000,\n        healthcare: 3500,\n        extracurricular: 1000,\n        others: 3500\n    },\n    '4-6': {\n        basicLiving: 15000,\n        education: 6000,\n        healthcare: 3000,\n        extracurricular: 3000,\n        others: 4000\n    },\n    '7-12': {\n        basicLiving: 16000,\n        education: 8000,\n        healthcare: 2500,\n        extracurricular: 5000,\n        others: 4500\n    },\n    '13-15': {\n        basicLiving: 18000,\n        education: 12000,\n        healthcare: 2500,\n        extracurricular: 8000,\n        others: 5000\n    },\n    '16-18': {\n        basicLiving: 20000,\n        education: 15000,\n        healthcare: 2500,\n        extracurricular: 12000,\n        others: 6000\n    }\n};\n/**\n * 根据年龄获取年龄段\n */ function getAgeGroup(age) {\n    if (age <= 1) return '0-1';\n    if (age <= 3) return '2-3';\n    if (age <= 6) return '4-6';\n    if (age <= 12) return '7-12';\n    if (age <= 15) return '13-15';\n    return '16-18';\n}\n/**\n * 计算费用分解\n */ function calculateCostBreakdown(data) {\n    const cityMultiplier = CITY_TIER_MULTIPLIERS[data.location];\n    const educationMultiplier = EDUCATION_MULTIPLIERS[data.educationLevel || 'public'];\n    const healthcareMultiplier = HEALTHCARE_MULTIPLIERS[data.healthcareLevel || 'basic'];\n    const ageGroup = getAgeGroup(data.childAge);\n    const baseCosts = BASE_ANNUAL_COSTS_BY_AGE[ageGroup];\n    // 基础生活费（受城市等级影响）\n    const basicLiving = baseCosts.basicLiving * cityMultiplier;\n    // 教育费用（受城市等级、教育类型影响，0-1岁无教育费用）\n    let education = baseCosts.education * cityMultiplier;\n    if (data.childAge > 1 && baseCosts.education > 0) {\n        education = education * educationMultiplier;\n    }\n    // 医疗费用（受城市等级和医疗水平影响）\n    const healthcare = baseCosts.healthcare * cityMultiplier * healthcareMultiplier;\n    // 课外活动费用（可选，受城市等级影响，0-1岁基本无课外活动）\n    let extracurricular = 0;\n    if (data.extracurricular && baseCosts.extracurricular > 0) {\n        extracurricular = baseCosts.extracurricular * cityMultiplier;\n        // 年龄越大，课外活动选择越多，费用可能更高\n        if (data.childAge >= 7) {\n            extracurricular = extracurricular * 1.2;\n        }\n    }\n    // 其他费用（受城市等级影响）\n    const others = baseCosts.others * cityMultiplier;\n    return {\n        basicLiving: Math.round(basicLiving),\n        education: Math.round(education),\n        healthcare: Math.round(healthcare),\n        extracurricular: Math.round(extracurricular),\n        others: Math.round(others)\n    };\n}\n/**\n * 生成建议\n */ function generateRecommendations(data, breakdown) {\n    const recommendations = [];\n    const totalCost = Object.values(breakdown).reduce((sum, cost)=>sum + cost, 0);\n    const monthlyIncome = data.monthlyIncome;\n    const annualIncome = monthlyIncome * 12;\n    const costRatio = totalCost / annualIncome;\n    // 基于费用占收入比例的建议\n    if (costRatio > 0.5) {\n        recommendations.push('养娃成本占家庭收入比例较高，建议适当调整教育和生活标准，或考虑增加收入来源。');\n    } else if (costRatio > 0.3) {\n        recommendations.push('养娃成本在合理范围内，建议做好长期财务规划，为孩子的未来教育储备资金。');\n    } else {\n        recommendations.push('您的经济条件较为宽裕，可以考虑为孩子提供更好的教育和生活条件。');\n    }\n    // 基于城市等级的建议\n    if (data.location === 'tier1') {\n        recommendations.push('一线城市生活成本较高，建议重点关注教育资源的性价比，合理规划住房和交通支出。');\n    } else if (data.location === 'tier2') {\n        recommendations.push('二线城市具有较好的教育资源和相对合理的生活成本，建议平衡教育投入和生活质量。');\n    } else {\n        recommendations.push('三线城市生活成本相对较低，可以考虑增加教育投入，为孩子提供更多学习机会。');\n    }\n    // 基于教育选择的建议\n    if (data.educationLevel === 'international') {\n        recommendations.push('国际教育费用较高，建议提前做好长期财务规划，同时关注教育质量和孩子的适应性。');\n    } else if (data.educationLevel === 'private') {\n        recommendations.push('私立教育可以提供更好的教育环境，建议综合考虑教育质量、费用和家庭经济状况。');\n    } else {\n        recommendations.push('公立教育性价比较高，可以将节省的费用用于课外培训和兴趣发展。');\n    }\n    // 基于课外活动的建议\n    if (data.extracurricular) {\n        recommendations.push('课外活动有助于孩子全面发展，建议选择适合孩子兴趣和天赋的项目，避免过度投入。');\n    } else {\n        recommendations.push('适当的课外活动可以丰富孩子的学习体验，建议根据孩子的兴趣适度参与。');\n    }\n    // 基于年龄的建议\n    const ageGroup = getAgeGroup(data.childAge);\n    if (ageGroup === '0-1') {\n        recommendations.push('婴儿期重点关注营养和健康，奶粉、尿布、疫苗是主要支出。建议选择品质可靠的婴儿用品，不必过度追求高端品牌。');\n    } else if (ageGroup === '2-3') {\n        recommendations.push('幼儿期开始有简单的早教需求，可以选择一些启蒙读物和益智玩具。医疗费用相对较高，建议做好预防保健。');\n    } else if (ageGroup === '4-6') {\n        recommendations.push('学前期需要考虑幼儿园费用，这是教育支出的开始。建议选择性价比合适的幼儿园，重点关注教育质量而非设施豪华程度。');\n    } else if (ageGroup === '7-12') {\n        recommendations.push('小学期间教育费用相对稳定，课外培训开始增加。建议根据孩子兴趣选择1-2项特长培养，避免过度报班。');\n    } else if (ageGroup === '13-15') {\n        recommendations.push('初中期间学习任务加重，补习费用可能大幅增加。建议合理规划教育投入，关注孩子的学习效率和身心健康。');\n    } else {\n        recommendations.push('高中期间面临升学压力，教育投入达到峰值。建议重点投入有效的学习资源，同时为大学费用做好储备。');\n    }\n    return recommendations;\n}\n/**\n * 主要计算函数\n */ function calculateChildRaisingCost(data) {\n    // 计算费用分解\n    const breakdown = calculateCostBreakdown(data);\n    // 计算总费用\n    const totalAnnualCost = Object.values(breakdown).reduce((sum, cost)=>sum + cost, 0);\n    const monthlyAverageCost = Math.round(totalAnnualCost / 12);\n    // 生成建议\n    const recommendations = generateRecommendations(data, breakdown);\n    return {\n        totalAnnualCost,\n        monthlyAverageCost,\n        breakdown,\n        recommendations,\n        userInput: data,\n        timestamp: new Date().toISOString()\n    };\n}\n/**\n * 获取费用占比\n */ function getCostPercentages(breakdown) {\n    const total = Object.values(breakdown).reduce((sum, cost)=>sum + cost, 0);\n    return {\n        basicLiving: Math.round(breakdown.basicLiving / total * 100),\n        education: Math.round(breakdown.education / total * 100),\n        healthcare: Math.round(breakdown.healthcare / total * 100),\n        extracurricular: Math.round(breakdown.extracurricular / total * 100),\n        others: Math.round(breakdown.others / total * 100)\n    };\n}\n/**\n * 获取全国平均费用（用于对比）\n */ function getNationalAverageCost(childAge) {\n    const ageGroup = getAgeGroup(childAge);\n    const ageMultiplier = AGE_MULTIPLIERS[ageGroup];\n    const baseCost = Object.values(BASE_ANNUAL_COSTS).reduce((sum, cost)=>sum + cost, 0);\n    // 全国平均使用二线城市标准\n    return Math.round(baseCost * CITY_TIER_MULTIPLIERS.tier2 * ageMultiplier);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvY2FsY3VsYXRvci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQTs7Q0FFQyxHQUNELE1BQU1BLHdCQUF3QjtJQUM1QkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLE9BQU87QUFDVDtBQUVBOztDQUVDLEdBQ0QsTUFBTUMsd0JBQXdCO0lBQzVCQyxRQUFRO0lBQ1JDLFNBQVM7SUFDVEMsZUFBZTtBQUNqQjtBQUVBOztDQUVDLEdBQ0QsTUFBTUMseUJBQXlCO0lBQzdCQyxPQUFPO0lBQ1BDLFNBQVM7QUFDWDtBQUVBOztDQUVDLEdBQ0QsTUFBTUMsMkJBQTJCO0lBQy9CLE9BQU87UUFDTEMsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFlBQVk7UUFDWkMsaUJBQWlCO1FBQ2pCQyxRQUFRO0lBQ1Y7SUFDQSxPQUFPO1FBQ0xKLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxZQUFZO1FBQ1pDLGlCQUFpQjtRQUNqQkMsUUFBUTtJQUNWO0lBQ0EsT0FBTztRQUNMSixhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsWUFBWTtRQUNaQyxpQkFBaUI7UUFDakJDLFFBQVE7SUFDVjtJQUNBLFFBQVE7UUFDTkosYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFlBQVk7UUFDWkMsaUJBQWlCO1FBQ2pCQyxRQUFRO0lBQ1Y7SUFDQSxTQUFTO1FBQ1BKLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxZQUFZO1FBQ1pDLGlCQUFpQjtRQUNqQkMsUUFBUTtJQUNWO0lBQ0EsU0FBUztRQUNQSixhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsWUFBWTtRQUNaQyxpQkFBaUI7UUFDakJDLFFBQVE7SUFDVjtBQUNGO0FBRUE7O0NBRUMsR0FDRCxTQUFTQyxZQUFZQyxHQUFXO0lBQzlCLElBQUlBLE9BQU8sR0FBRyxPQUFPO0lBQ3JCLElBQUlBLE9BQU8sR0FBRyxPQUFPO0lBQ3JCLElBQUlBLE9BQU8sR0FBRyxPQUFPO0lBQ3JCLElBQUlBLE9BQU8sSUFBSSxPQUFPO0lBQ3RCLElB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aUIsS0FBS0MsS0FBSyxDQUFDLFVBQVdsQixTQUFTLEdBQUd3QyxRQUFTO1FBQ3REdkMsWUFBWWdCLEtBQUtDLEtBQUssQ0FBQyxVQUFXakIsVUFBVSxHQUFHdUMsUUFBUztRQUN4RHRDLGlCQUFpQmUsS0FBS0MsS0FBSyxDQUFDLFVBQVdoQixlQUFlLEdBQUdzQyxRQUFTO1FBQ2xFckMsUUFBUWMsS0FBS0MsS0FBSyxDQUFDLFVBQVdmLE1BQU0sR0FBR3FDLFFBQVM7SUFDbEQ7QUFDRjtBQUVBOztDQUVDLEdBQ00sU0FBU0MsdUJBQXVCMUIsUUFBZ0I7SUFDckQsTUFBTUQsV0FBV1YsWUFBWVc7SUFDN0IsTUFBTTJCLGdCQUFnQkMsZUFBZSxDQUFDN0IsU0FBUztJQUMvQyxNQUFNOEIsV0FBV3JCLE9BQU9DLE1BQU0sQ0FBQ3FCLG1CQUFtQnBCLE1BQU0sQ0FBQyxDQUFDQyxLQUFLQyxPQUFTRCxNQUFNQyxNQUFNO0lBRXBGLGVBQWU7SUFDZixPQUFPVixLQUFLQyxLQUFLLENBQUMwQixXQUFXekQsc0JBQXNCRSxLQUFLLEdBQUdxRDtBQUM3RCIsInNvdXJjZXMiOlsiL1VzZXJzL2ExMjM0NDQvRG9jdW1lbnRzL2dpdGh1YiBwcm9qZWN0L0NoaWxkLVJhaXNpbmctQ29zdC1DYWxjdWxhdG9yL2NoaWxkLXJhaXNpbmctY29zdC1jYWxjdWxhdG9yL3NyYy9saWIvY2FsY3VsYXRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYWxjdWxhdG9yRm9ybURhdGEsIENhbGN1bGF0aW9uUmVzdWx0LCBDb3N0QnJlYWtkb3duIH0gZnJvbSAnQC90eXBlcydcblxuLyoqXG4gKiDln47luILnrYnnuqfotLnnlKjns7vmlbBcbiAqL1xuY29uc3QgQ0lUWV9USUVSX01VTFRJUExJRVJTID0ge1xuICB0aWVyMTogMS41LCAgLy8g5LiA57q/5Z+O5biCXG4gIHRpZXIyOiAxLjIsICAvLyDkuoznur/ln47luIJcbiAgdGllcjM6IDEuMCwgIC8vIOS4iee6v+WPiuS7peS4i+WfjuW4glxufVxuXG4vKipcbiAqIOaVmeiCsuexu+Wei+i0ueeUqOezu+aVsFxuICovXG5jb25zdCBFRFVDQVRJT05fTVVMVElQTElFUlMgPSB7XG4gIHB1YmxpYzogMS4wLCAgICAgICAgLy8g5YWs56uL5pWZ6IKyXG4gIHByaXZhdGU6IDIuNSwgICAgICAgLy8g56eB56uL5pWZ6IKyXG4gIGludGVybmF0aW9uYWw6IDQuMCwgLy8g5Zu96ZmF5pWZ6IKyXG59XG5cbi8qKlxuICog5Yy755aX5rC05bmz6LS555So57O75pWwXG4gKi9cbmNvbnN0IEhFQUxUSENBUkVfTVVMVElQTElFUlMgPSB7XG4gIGJhc2ljOiAxLjAsICAgIC8vIOWfuuehgOWMu+eWl1xuICBwcmVtaXVtOiAyLjAsICAvLyDpq5jnq6/ljLvnlpdcbn1cblxuLyoqXG4gKiDkuI3lkIzlubTpvoTmrrXnmoTln7rnoYDlubTluqbotLnnlKjvvIjkuInnur/ln47luILvvIzln7rnoYDljLvnlpfvvIlcbiAqL1xuY29uc3QgQkFTRV9BTk5VQUxfQ09TVFNfQllfQUdFID0ge1xuICAnMC0xJzoge1xuICAgIGJhc2ljTGl2aW5nOiAxODAwMCwgICAgIC8vIOWptOWEv+acn+eUn+a0u+i0uei+g+mrmO+8iOWltueyieOAgeWwv+W4g+etie+8iVxuICAgIGVkdWNhdGlvbjogMCwgICAgICAgICAgIC8vIOaXoOato+W8j+aVmeiCsui0ueeUqFxuICAgIGhlYWx0aGNhcmU6IDQwMDAsICAgICAgIC8vIOeWq+iLl+OAgeS9k+ajgOi0ueeUqOi+g+mrmFxuICAgIGV4dHJhY3VycmljdWxhcjogMCwgICAgIC8vIOaXoOivvuWklua0u+WKqFxuICAgIG90aGVyczogMzAwMCwgICAgICAgICAgIC8vIOWptOWEv+eUqOWTgeetiVxuICB9LFxuICAnMi0zJzoge1xuICAgIGJhc2ljTGl2aW5nOiAxNjAwMCwgICAgIC8vIOeUn+a0u+i0ueeVpemZjVxuICAgIGVkdWNhdGlvbjogMjAwMCwgICAgICAgIC8vIOaXqeaVmeOAgeWQr+iSmeaVmeiCslxuICAgIGhlYWx0aGNhcmU6IDM1MDAsICAgICAgIC8vIOWMu+eWl+i0ueeUqFxuICAgIGV4dHJhY3VycmljdWxhcjogMTAwMCwgIC8vIOeugOWNleeahOS6suWtkOa0u+WKqFxuICAgIG90aGVyczogMzUwMCwgICAgICAgICAgIC8vIOeOqeWFt+OAgeWbvuS5puetiVxuICB9LFxuICAnNC02Jzoge1xuICAgIGJhc2ljTGl2aW5nOiAxNTAwMCwgICAgIC8vIOWtpuWJjeacn+eUn+a0u+i0uVxuICAgIGVkdWNhdGlvbjogNjAwMCwgICAgICAgIC8vIOW5vOWEv+Wbrei0ueeUqFxuICAgIGhlYWx0aGNhcmU6IDMwMDAsICAgICAgIC8vIOW4uOinhOWMu+eWl1xuICAgIGV4dHJhY3VycmljdWxhcjogMzAwMCwgIC8vIOWFtOi2o+WQr+iSmVxuICAgIG90aGVyczogNDAwMCwgICAgICAgICAgIC8vIOWtpuS5oOeUqOWTgeetiVxuICB9LFxuICAnNy0xMic6IHtcbiAgICBiYXNpY0xpdmluZzogMTYwMDAsICAgICAvLyDlsI/lrabmnJ/nlJ/mtLvotLlcbiAgICBlZHVjYXRpb246IDgwMDAsICAgICAgICAvLyDlsI/lrabmlZnogrLotLnnlKhcbiAgICBoZWFsdGhjYXJlOiAyNTAwLCAgICAgICAvLyDljLvnlpfotLnnlKjpmY3kvY5cbiAgICBleHRyYWN1cnJpY3VsYXI6IDUwMDAsICAvLyDor77lpJbln7norq3lop7liqBcbiAgICBvdGhlcnM6IDQ1MDAsICAgICAgICAgICAvLyDlrabkuaDnlKjlk4HjgIHmloflhbfnrYlcbiAgfSxcbiAgJzEzLTE1Jzoge1xuICAgIGJhc2ljTGl2aW5nOiAxODAwMCwgICAgIC8vIOmdkuaYpeacn+eUn+a0u+i0ueWinuWKoFxuICAgIGVkdWNhdGlvbjogMTIwMDAsICAgICAgIC8vIOWIneS4reaVmeiCsui0ueeUqFxuICAgIGhlYWx0aGNhcmU6IDI1MDAsICAgICAgIC8vIOWMu+eWl+i0ueeUqFxuICAgIGV4dHJhY3VycmljdWxhcjogODAwMCwgIC8vIOihpeS5oOePreOAgeWFtOi2o+ePrVxuICAgIG90aGVyczogNTAwMCwgICAgICAgICAgIC8vIOeUteWtkOS6p+WTgeOAgeacjeijheetiVxuICB9LFxuICAnMTYtMTgnOiB7XG4gICAgYmFzaWNMaXZpbmc6IDIwMDAwLCAgICAgLy8g6auY5Lit5pyf55Sf5rS76LS55pyA6auYXG4gICAgZWR1Y2F0aW9uOiAxNTAwMCwgICAgICAgLy8g6auY5Lit5pWZ6IKy6LS555SoXG4gICAgaGVhbHRoY2FyZTogMjUwMCwgICAgICAgLy8g5Yy755aX6LS555SoXG4gICAgZXh0cmFjdXJyaWN1bGFyOiAxMjAwMCwgLy8g6auY6ICD6KGl5Lmg44CB54m56ZW/5Z+56K6tXG4gICAgb3RoZXJzOiA2MDAwLCAgICAgICAgICAgLy8g5ZCE56eN6LS555So5aKe5YqgXG4gIH0sXG59XG5cbi8qKlxuICog5qC55o2u5bm06b6E6I635Y+W5bm06b6E5q61XG4gKi9cbmZ1bmN0aW9uIGdldEFnZUdyb3VwKGFnZTogbnVtYmVyKToga2V5b2YgdHlwZW9mIEJBU0VfQU5OVUFMX0NPU1RTX0JZX0FHRSB7XG4gIGlmIChhZ2UgPD0gMSkgcmV0dXJuICcwLTEnXG4gIGlmIChhZ2UgPD0gMykgcmV0dXJuICcyLTMnXG4gIGlmIChhZ2UgPD0gNikgcmV0dXJuICc0LTYnXG4gIGlmIChhZ2UgPD0gMTIpIHJldHVybiAnNy0xMidcbiAgaWYgKGFnZSA8PSAxNSkgcmV0dXJuICcxMy0xNSdcbiAgcmV0dXJuICcxNi0xOCdcbn1cblxuLyoqXG4gKiDorqHnrpfotLnnlKjliIbop6NcbiAqL1xuZnVuY3Rpb24gY2FsY3VsYXRlQ29zdEJyZWFrZG93bihkYXRhOiBDYWxjdWxhdG9yRm9ybURhdGEpOiBDb3N0QnJlYWtkb3duIHtcbiAgY29uc3QgY2l0eU11bHRpcGxpZXIgPSBDSVRZX1RJRVJfTVVMVElQTElFUlNbZGF0YS5sb2NhdGlvbl1cbiAgY29uc3QgZWR1Y2F0aW9uTXVsdGlwbGllciA9IEVEVUNBVElPTl9NVUxUSVBMSUVSU1tkYXRhLmVkdWNhdGlvbkxldmVsIHx8ICdwdWJsaWMnXVxuICBjb25zdCBoZWFsdGhjYXJlTXVsdGlwbGllciA9IEhFQUxUSENBUkVfTVVMVElQTElFUlNbZGF0YS5oZWFsdGhjYXJlTGV2ZWwgfHwgJ2Jhc2ljJ11cbiAgY29uc3QgYWdlR3JvdXAgPSBnZXRBZ2VHcm91cChkYXRhLmNoaWxkQWdlKVxuICBjb25zdCBiYXNlQ29zdHMgPSBCQVNFX0FOTlVBTF9DT1NUU19CWV9BR0VbYWdlR3JvdXBdXG5cbiAgLy8g5Z+656GA55Sf5rS76LS577yI5Y+X5Z+O5biC562J57qn5b2x5ZON77yJXG4gIGNvbnN0IGJhc2ljTGl2aW5nID0gYmFzZUNvc3RzLmJhc2ljTGl2aW5nICogY2l0eU11bHRpcGxpZXJcblxuICAvLyDmlZnogrLotLnnlKjvvIjlj5fln47luILnrYnnuqfjgIHmlZnogrLnsbvlnovlvbHlk43vvIwwLTHlsoHml6DmlZnogrLotLnnlKjvvIlcbiAgbGV0IGVkdWNhdGlvbiA9IGJhc2VDb3N0cy5lZHVjYXRpb24gKiBjaXR5TXVsdGlwbGllclxuICBpZiAoZGF0YS5jaGlsZEFnZSA+IDEgJiYgYmFzZUNvc3RzLmVkdWNhdGlvbiA+IDApIHtcbiAgICBlZHVjYXRpb24gPSBlZHVjYXRpb24gKiBlZHVjYXRpb25NdWx0aXBsaWVyXG4gIH1cblxuICAvLyDljLvnlpfotLnnlKjvvIjlj5fln47luILnrYnnuqflkozljLvnlpfmsLTlubPlvbHlk43vvIlcbiAgY29uc3QgaGVhbHRoY2FyZSA9IGJhc2VDb3N0cy5oZWFsdGhjYXJlICogY2l0eU11bHRpcGxpZXIgKiBoZWFsdGhjYXJlTXVsdGlwbGllclxuXG4gIC8vIOivvuWklua0u+WKqOi0ueeUqO+8iOWPr+mAie+8jOWPl+WfjuW4guetiee6p+W9seWTje+8jDAtMeWygeWfuuacrOaXoOivvuWklua0u+WKqO+8iVxuICBsZXQgZXh0cmFjdXJyaWN1bGFyID0gMFxuICBpZiAoZGF0YS5leHRyYWN1cnJpY3VsYXIgJiYgYmFzZUNvc3RzLmV4dHJhY3VycmljdWxhciA+IDApIHtcbiAgICBleHRyYWN1cnJpY3VsYXIgPSBiYXNlQ29zdHMuZXh0cmFjdXJyaWN1bGFyICogY2l0eU11bHRpcGxpZXJcbiAgICAvLyDlubTpvoTotorlpKfvvIzor77lpJbmtLvliqjpgInmi6notorlpJrvvIzotLnnlKjlj6/og73mm7Tpq5hcbiAgICBpZiAoZGF0YS5jaGlsZEFnZSA+PSA3KSB7XG4gICAgICBleHRyYWN1cnJpY3VsYXIgPSBleHRyYWN1cnJpY3VsYXIgKiAxLjJcbiAgICB9XG4gIH1cblxuICAvLyDlhbbku5botLnnlKjvvIjlj5fln47luILnrYnnuqflvbHlk43vvIlcbiAgY29uc3Qgb3RoZXJzID0gYmFzZUNvc3RzLm90aGVycyAqIGNpdHlNdWx0aXBsaWVyXG5cbiAgcmV0dXJuIHtcbiAgICBiYXNpY0xpdmluZzogTWF0aC5yb3VuZChiYXNpY0xpdmluZyksXG4gICAgZWR1Y2F0aW9uOiBNYXRoLnJvdW5kKGVkdWNhdGlvbiksXG4gICAgaGVhbHRoY2FyZTogTWF0aC5yb3VuZChoZWFsdGhjYXJlKSxcbiAgICBleHRyYWN1cnJpY3VsYXI6IE1hdGgucm91bmQoZXh0cmFjdXJyaWN1bGFyKSxcbiAgICBvdGhlcnM6IE1hdGgucm91bmQob3RoZXJzKSxcbiAgfVxufVxuXG4vKipcbiAqIOeUn+aIkOW7uuiurlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVJlY29tbWVuZGF0aW9ucyhkYXRhOiBDYWxjdWxhdG9yRm9ybURhdGEsIGJyZWFrZG93bjogQ29zdEJyZWFrZG93bik6IHN0cmluZ1tdIHtcbiAgY29uc3QgcmVjb21tZW5kYXRpb25zOiBzdHJpbmdbXSA9IFtdXG4gIGNvbnN0IHRvdGFsQ29zdCA9IE9iamVjdC52YWx1ZXMoYnJlYWtkb3duKS5yZWR1Y2UoKHN1bSwgY29zdCkgPT4gc3VtICsgY29zdCwgMClcbiAgY29uc3QgbW9udGhseUluY29tZSA9IGRhdGEubW9udGhseUluY29tZVxuICBjb25zdCBhbm51YWxJbmNvbWUgPSBtb250aGx5SW5jb21lICogMTJcbiAgY29uc3QgY29zdFJhdGlvID0gdG90YWxDb3N0IC8gYW5udWFsSW5jb21lXG5cbiAgLy8g5Z+65LqO6LS555So5Y2g5pS25YWl5q+U5L6L55qE5bu66K6uXG4gIGlmIChjb3N0UmF0aW8gPiAwLjUpIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCgn5YW75aiD5oiQ5pys5Y2g5a625bqt5pS25YWl5q+U5L6L6L6D6auY77yM5bu66K6u6YCC5b2T6LCD5pW05pWZ6IKy5ZKM55Sf5rS75qCH5YeG77yM5oiW6ICD6JmR5aKe5Yqg5pS25YWl5p2l5rqQ44CCJylcbiAgfSBlbHNlIGlmIChjb3N0UmF0aW8gPiAwLjMpIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCgn5YW75aiD5oiQ5pys5Zyo5ZCI55CG6IyD5Zu05YaF77yM5bu66K6u5YGa5aW96ZW/5pyf6LSi5Yqh6KeE5YiS77yM5Li65a2p5a2Q55qE5pyq5p2l5pWZ6IKy5YKo5aSH6LWE6YeR44CCJylcbiAgfSBlbHNlIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCgn5oKo55qE57uP5rWO5p2h5Lu26L6D5Li65a696KOV77yM5Y+v5Lul6ICD6JmR5Li65a2p5a2Q5o+Q5L6b5pu05aW955qE5pWZ6IKy5ZKM55Sf5rS75p2h5Lu244CCJylcbiAgfVxuXG4gIC8vIOWfuuS6juWfjuW4guetiee6p+eahOW7uuiurlxuICBpZiAoZGF0YS5sb2NhdGlvbiA9PT0gJ3RpZXIxJykge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKCfkuIDnur/ln47luILnlJ/mtLvmiJDmnKzovoPpq5jvvIzlu7rorq7ph43ngrnlhbPms6jmlZnogrLotYTmupDnmoTmgKfku7fmr5TvvIzlkIjnkIbop4TliJLkvY/miL/lkozkuqTpgJrmlK/lh7rjgIInKVxuICB9IGVsc2UgaWYgKGRhdGEubG9jYXRpb24gPT09ICd0aWVyMicpIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCgn5LqM57q/5Z+O5biC5YW35pyJ6L6D5aW955qE5pWZ6IKy6LWE5rqQ5ZKM55u45a+55ZCI55CG55qE55Sf5rS75oiQ5pys77yM5bu66K6u5bmz6KGh5pWZ6IKy5oqV5YWl5ZKM55Sf5rS76LSo6YeP44CCJylcbiAgfSBlbHNlIHtcbiAgICByZWNvbW1lbmRhdGlvbnMucHVzaCgn5LiJ57q/5Z+O5biC55Sf5rS75oiQ5pys55u45a+56L6D5L2O77yM5Y+v5Lul6ICD6JmR5aKe5Yqg5pWZ6IKy5oqV5YWl77yM5Li65a2p5a2Q5o+Q5L6b5pu05aSa5a2m5Lmg5py65Lya44CCJylcbiAgfVxuXG4gIC8vIOWfuuS6juaVmeiCsumAieaLqeeahOW7uuiurlxuICBpZiAoZGF0YS5lZHVjYXRpb25MZXZlbCA9PT0gJ2ludGVybmF0aW9uYWwnKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+WbvemZheaVmeiCsui0ueeUqOi+g+mrmO+8jOW7uuiuruaPkOWJjeWBmuWlvemVv+acn+i0ouWKoeinhOWIku+8jOWQjOaXtuWFs+azqOaVmeiCsui0qOmHj+WSjOWtqeWtkOeahOmAguW6lOaAp+OAgicpXG4gIH0gZWxzZSBpZiAoZGF0YS5lZHVjYXRpb25MZXZlbCA9PT0gJ3ByaXZhdGUnKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+engeeri+aVmeiCsuWPr+S7peaPkOS+m+abtOWlveeahOaVmeiCsueOr+Wig++8jOW7uuiurue7vOWQiOiAg+iZkeaVmeiCsui0qOmHj+OAgei0ueeUqOWSjOWutuW6ree7j+a1jueKtuWGteOAgicpXG4gIH0gZWxzZSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+WFrOeri+aVmeiCsuaAp+S7t+avlOi+g+mrmO+8jOWPr+S7peWwhuiKguecgeeahOi0ueeUqOeUqOS6juivvuWkluWfueiureWSjOWFtOi2o+WPkeWxleOAgicpXG4gIH1cblxuICAvLyDln7rkuo7or77lpJbmtLvliqjnmoTlu7rorq5cbiAgaWYgKGRhdGEuZXh0cmFjdXJyaWN1bGFyKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+ivvuWklua0u+WKqOacieWKqeS6juWtqeWtkOWFqOmdouWPkeWxle+8jOW7uuiurumAieaLqemAguWQiOWtqeWtkOWFtOi2o+WSjOWkqei1i+eahOmhueebru+8jOmBv+WFjei/h+W6puaKleWFpeOAgicpXG4gIH0gZWxzZSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+mAguW9k+eahOivvuWklua0u+WKqOWPr+S7peS4sOWvjOWtqeWtkOeahOWtpuS5oOS9k+mqjO+8jOW7uuiuruagueaNruWtqeWtkOeahOWFtOi2o+mAguW6puWPguS4juOAgicpXG4gIH1cblxuICAvLyDln7rkuo7lubTpvoTnmoTlu7rorq5cbiAgY29uc3QgYWdlR3JvdXAgPSBnZXRBZ2VHcm91cChkYXRhLmNoaWxkQWdlKVxuICBpZiAoYWdlR3JvdXAgPT09ICcwLTEnKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+WptOWEv+acn+mHjeeCueWFs+azqOiQpeWFu+WSjOWBpeW6t++8jOWltueyieOAgeWwv+W4g+OAgeeWq+iLl+aYr+S4u+imgeaUr+WHuuOAguW7uuiurumAieaLqeWTgei0qOWPr+mdoOeahOWptOWEv+eUqOWTge+8jOS4jeW/hei/h+W6pui/veaxgumrmOerr+WTgeeJjOOAgicpXG4gIH0gZWxzZSBpZiAoYWdlR3JvdXAgPT09ICcyLTMnKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+W5vOWEv+acn+W8gOWni+acieeugOWNleeahOaXqeaVmemcgOaxgu+8jOWPr+S7pemAieaLqeS4gOS6m+WQr+iSmeivu+eJqeWSjOebiuaZuueOqeWFt+OAguWMu+eWl+i0ueeUqOebuOWvuei+g+mrmO+8jOW7uuiuruWBmuWlvemihOmYsuS/neWBpeOAgicpXG4gIH0gZWxzZSBpZiAoYWdlR3JvdXAgPT09ICc0LTYnKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+WtpuWJjeacn+mcgOimgeiAg+iZkeW5vOWEv+Wbrei0ueeUqO+8jOi/meaYr+aVmeiCsuaUr+WHuueahOW8gOWni+OAguW7uuiurumAieaLqeaAp+S7t+avlOWQiOmAgueahOW5vOWEv+Wbre+8jOmHjeeCueWFs+azqOaVmeiCsui0qOmHj+iAjOmdnuiuvuaWveixquWNjueoi+W6puOAgicpXG4gIH0gZWxzZSBpZiAoYWdlR3JvdXAgPT09ICc3LTEyJykge1xuICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKCflsI/lrabmnJ/pl7TmlZnogrLotLnnlKjnm7jlr7nnqLPlrprvvIzor77lpJbln7norq3lvIDlp4vlop7liqDjgILlu7rorq7moLnmja7lranlrZDlhbTotqPpgInmi6kxLTLpobnnibnplb/ln7nlhbvvvIzpgb/lhY3ov4fluqbmiqXnj63jgIInKVxuICB9IGVsc2UgaWYgKGFnZUdyb3VwID09PSAnMTMtMTUnKSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+WIneS4reacn+mXtOWtpuS5oOS7u+WKoeWKoOmHje+8jOihpeS5oOi0ueeUqOWPr+iDveWkp+W5heWinuWKoOOAguW7uuiuruWQiOeQhuinhOWIkuaVmeiCsuaKleWFpe+8jOWFs+azqOWtqeWtkOeahOWtpuS5oOaViOeOh+WSjOi6q+W/g+WBpeW6t+OAgicpXG4gIH0gZWxzZSB7XG4gICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+mrmOS4reacn+mXtOmdouS4tOWNh+WtpuWOi+WKm++8jOaVmeiCsuaKleWFpei+vuWIsOWzsOWAvOOAguW7uuiurumHjeeCueaKleWFpeacieaViOeahOWtpuS5oOi1hOa6kO+8jOWQjOaXtuS4uuWkp+Wtpui0ueeUqOWBmuWlveWCqOWkh+OAgicpXG4gIH1cblxuICByZXR1cm4gcmVjb21tZW5kYXRpb25zXG59XG5cbi8qKlxuICog5Li76KaB6K6h566X5Ye95pWwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVDaGlsZFJhaXNpbmdDb3N0KGRhdGE6IENhbGN1bGF0b3JGb3JtRGF0YSk6IENhbGN1bGF0aW9uUmVzdWx0IHtcbiAgLy8g6K6h566X6LS555So5YiG6KejXG4gIGNvbnN0IGJyZWFrZG93biA9IGNhbGN1bGF0ZUNvc3RCcmVha2Rvd24oZGF0YSlcbiAgXG4gIC8vIOiuoeeul+aAu+i0ueeUqFxuICBjb25zdCB0b3RhbEFubnVhbENvc3QgPSBPYmplY3QudmFsdWVzKGJyZWFrZG93bikucmVkdWNlKChzdW0sIGNvc3QpID0+IHN1bSArIGNvc3QsIDApXG4gIGNvbnN0IG1vbnRobHlBdmVyYWdlQ29zdCA9IE1hdGgucm91bmQodG90YWxBbm51YWxDb3N0IC8gMTIpXG4gIFxuICAvLyDnlJ/miJDlu7rorq5cbiAgY29uc3QgcmVjb21tZW5kYXRpb25zID0gZ2VuZXJhdGVSZWNvbW1lbmRhdGlvbnMoZGF0YSwgYnJlYWtkb3duKVxuICBcbiAgcmV0dXJuIHtcbiAgICB0b3RhbEFubnVhbENvc3QsXG4gICAgbW9udGhseUF2ZXJhZ2VDb3N0LFxuICAgIGJyZWFrZG93bixcbiAgICByZWNvbW1lbmRhdGlvbnMsXG4gICAgdXNlcklucHV0OiBkYXRhLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICB9XG59XG5cbi8qKlxuICog6I635Y+W6LS555So5Y2g5q+UXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb3N0UGVyY2VudGFnZXMoYnJlYWtkb3duOiBDb3N0QnJlYWtkb3duKTogUmVjb3JkPGtleW9mIENvc3RCcmVha2Rvd24sIG51bWJlcj4ge1xuICBjb25zdCB0b3RhbCA9IE9iamVjdC52YWx1ZXMoYnJlYWtkb3duKS5yZWR1Y2UoKHN1bSwgY29zdCkgPT4gc3VtICsgY29zdCwgMClcbiAgXG4gIHJldHVybiB7XG4gICAgYmFzaWNMaXZpbmc6IE1hdGgucm91bmQoKGJyZWFrZG93bi5iYXNpY0xpdmluZyAvIHRvdGFsKSAqIDEwMCksXG4gICAgZWR1Y2F0aW9uOiBNYXRoLnJvdW5kKChicmVha2Rvd24uZWR1Y2F0aW9uIC8gdG90YWwpICogMTAwKSxcbiAgICBoZWFsdGhjYXJlOiBNYXRoLnJvdW5kKChicmVha2Rvd24uaGVhbHRoY2FyZSAvIHRvdGFsKSAqIDEwMCksXG4gICAgZXh0cmFjdXJyaWN1bGFyOiBNYXRoLnJvdW5kKChicmVha2Rvd24uZXh0cmFjdXJyaWN1bGFyIC8gdG90YWwpICogMTAwKSxcbiAgICBvdGhlcnM6IE1hdGgucm91bmQoKGJyZWFrZG93bi5vdGhlcnMgLyB0b3RhbCkgKiAxMDApLFxuICB9XG59XG5cbi8qKlxuICog6I635Y+W5YWo5Zu95bmz5Z2H6LS555So77yI55So5LqO5a+55q+U77yJXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXROYXRpb25hbEF2ZXJhZ2VDb3N0KGNoaWxkQWdlOiBudW1iZXIpOiBudW1iZXIge1xuICBjb25zdCBhZ2VHcm91cCA9IGdldEFnZUdyb3VwKGNoaWxkQWdlKVxuICBjb25zdCBhZ2VNdWx0aXBsaWVyID0gQUdFX01VTFRJUExJRVJTW2FnZUdyb3VwXVxuICBjb25zdCBiYXNlQ29zdCA9IE9iamVjdC52YWx1ZXMoQkFTRV9BTk5VQUxfQ09TVFMpLnJlZHVjZSgoc3VtLCBjb3N0KSA9PiBzdW0gKyBjb3N0LCAwKVxuICBcbiAgLy8g5YWo5Zu95bmz5Z2H5L2/55So5LqM57q/5Z+O5biC5qCH5YeGXG4gIHJldHVybiBNYXRoLnJvdW5kKGJhc2VDb3N0ICogQ0lUWV9USUVSX01VTFRJUExJRVJTLnRpZXIyICogYWdlTXVsdGlwbGllcilcbn1cbiJdLCJuYW1lcyI6WyJDSVRZX1RJRVJfTVVMVElQTElFUlMiLCJ0aWVyMSIsInRpZXIyIiwidGllcjMiLCJFRFVDQVRJT05fTVVMVElQTElFUlMiLCJwdWJsaWMiLCJwcml2YXRlIiwiaW50ZXJuYXRpb25hbCIsIkhFQUxUSENBUkVfTVVMVElQTElFUlMiLCJiYXNpYyIsInByZW1pdW0iLCJCQVNFX0FOTlVBTF9DT1NUU19CWV9BR0UiLCJiYXNpY0xpdmluZyIsImVkdWNhdGlvbiIsImhlYWx0aGNhcmUiLCJleHRyYWN1cnJpY3VsYXIiLCJvdGhlcnMiLCJnZXRBZ2VHcm91cCIsImFnZSIsImNhbGN1bGF0ZUNvc3RCcmVha2Rvd24iLCJkYXRhIiwiY2l0eU11bHRpcGxpZXIiLCJsb2NhdGlvbiIsImVkdWNhdGlvbk11bHRpcGxpZXIiLCJlZHVjYXRpb25MZXZlbCIsImhlYWx0aGNhcmVNdWx0aXBsaWVyIiwiaGVhbHRoY2FyZUxldmVsIiwiYWdlR3JvdXAiLCJjaGlsZEFnZSIsImJhc2VDb3N0cyIsIk1hdGgiLCJyb3VuZCIsImdlbmVyYXRlUmVjb21tZW5kYXRpb25zIiwiYnJlYWtkb3duIiwicmVjb21tZW5kYXRpb25zIiwidG90YWxDb3N0IiwiT2JqZWN0IiwidmFsdWVzIiwicmVkdWNlIiwic3VtIiwiY29zdCIsIm1vbnRobHlJbmNvbWUiLCJhbm51YWxJbmNvbWUiLCJjb3N0UmF0aW8iLCJwdXNoIiwiY2FsY3VsYXRlQ2hpbGRSYWlzaW5nQ29zdCIsInRvdGFsQW5udWFsQ29zdCIsIm1vbnRobHlBdmVyYWdlQ29zdCIsInVzZXJJbnB1dCIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImdldENvc3RQZXJjZW50YWdlcyIsInRvdGFsIiwiZ2V0TmF0aW9uYWxBdmVyYWdlQ29zdCIsImFnZU11bHRpcGxpZXIiLCJBR0VfTVVMVElQTElFUlMiLCJiYXNlQ29zdCIsIkJBU0VfQU5OVUFMX0NPU1RTIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/calculator.ts\n"));

/***/ })

});